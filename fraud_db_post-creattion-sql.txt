alter table fraud_db.ACT_DETAILS modify PARTITION BY RANGE (CREATED_DATE)  ( PARTITION P_DATE_TO_20230501 
VALUES LESS THAN (TIMESTAMP '2023-05-01 00:00:00')) parallel 16 ;
alter table fraud_db.CLAIM_HISTORY modify PARTITION BY RANGE (CREATED_DATE)  ( PARTITION P_DATE_TO_20230501 
VALUES LESS THAN (TIMESTAMP '2023-05-01 00:00:00')) parallel 16 ;
alter table fraud_db.FRAUD_RULES modify PARTITION BY RANGE (CREATED_DATE)  ( PARTITION P_DATE_TO_20230501 
VALUES LESS THAN (TIMESTAMP '2023-05-01 00:00:00')) parallel 16 ;
alter table fraud_db.FRAUD_RULES_HIST modify PARTITION BY RANGE (CREATED_DATE)  ( PARTITION P_DATE_TO_20230501 
VALUES LESS THAN (TIMESTAMP '2023-05-01 00:00:00')) parallel 16 ;
alter table fraud_db.FRAUD_RULE_FLOW modify PARTITION BY RANGE (CREATED_DATE)  ( PARTITION P_DATE_TO_20230501 
VALUES LESS THAN (TIMESTAMP '2023-05-01 00:00:00')) parallel 16 ;
alter table fraud_db.PATIENT modify PARTITION BY RANGE (CREATED_DATE)  ( PARTITION P_DATE_TO_20230501 
VALUES LESS THAN (TIMESTAMP '2023-05-01 00:00:00')) parallel 16 ;
alter table fraud_db.QUEUE_LOG modify PARTITION BY RANGE (CREATED_DATE)  ( PARTITION P_DATE_TO_20230501 
VALUES LESS THAN (TIMESTAMP '2023-05-01 00:00:00')) parallel 16 ;
alter table fraud_db.TRANSACTION_QUEUE modify PARTITION BY RANGE (CREATED_DATE)  ( PARTITION P_DATE_TO_20230501 
VALUES LESS THAN (TIMESTAMP '2023-05-01 00:00:00')) parallel 16 ;


ALTER TABLE fraud_db.ACT_DETAILS add parTITION P_DATE_OTHER VALUES LESS THAN (MAXVALUE);
ALTER TABLE fraud_db.CLAIM_HISTORY add parTITION P_DATE_OTHER VALUES LESS THAN (MAXVALUE);
ALTER TABLE fraud_db.FRAUD_RULES add parTITION P_DATE_OTHER VALUES LESS THAN (MAXVALUE);
ALTER TABLE fraud_db.FRAUD_RULES_HIST add parTITION P_DATE_OTHER VALUES LESS THAN (MAXVALUE);
ALTER TABLE fraud_db.FRAUD_RULE_FLOW add parTITION P_DATE_OTHER VALUES LESS THAN (MAXVALUE);
ALTER TABLE fraud_db.PATIENT add parTITION P_DATE_OTHER VALUES LESS THAN (MAXVALUE);
ALTER TABLE fraud_db.QUEUE_LOG add parTITION P_DATE_OTHER VALUES LESS THAN (MAXVALUE);
ALTER TABLE fraud_db.TRANSACTION_QUEUE add parTITION P_DATE_OTHER VALUES LESS THAN (MAXVALUE);


ALTER TABLE fraud_db.ACT_DETAILS MOVE partition P_DATE_OTHER ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.ACT_DETAILS MOVE partition P_DATE_TO_20230501 ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.CLAIM_HISTORY MOVE partition P_DATE_OTHER ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.CLAIM_HISTORY MOVE partition P_DATE_TO_20230501 ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.FRAUD_RULES MOVE partition P_DATE_OTHER ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.FRAUD_RULES MOVE partition P_DATE_TO_20230501 ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.FRAUD_RULES_HIST MOVE partition P_DATE_OTHER ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.FRAUD_RULES_HIST MOVE partition P_DATE_TO_20230501 ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.FRAUD_RULE_FLOW MOVE partition P_DATE_OTHER ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.FRAUD_RULE_FLOW MOVE partition P_DATE_TO_20230501 ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.PATIENT MOVE partition P_DATE_OTHER ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.PATIENT MOVE partition P_DATE_TO_20230501 ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.QUEUE_LOG MOVE partition P_DATE_OTHER ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.QUEUE_LOG MOVE partition P_DATE_TO_20230501 ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.TRANSACTION_QUEUE MOVE partition P_DATE_OTHER ROW STORE COMPRESS ADVANCED ;
ALTER TABLE fraud_db.TRANSACTION_QUEUE MOVE partition P_DATE_TO_20230501 ROW STORE COMPRESS ADVANCED ;

ALTER TABLE FRAUD_DB.CLAIM_HISTORY MOVE PARTITION P_DATE_OTHER ONLINE LOB(DIAGNOSIS_LIST) STORE AS SECUREFILE (COMPRESS HIGH);
ALTER TABLE FRAUD_DB.CLAIM_HISTORY MOVE PARTITION P_DATE_OTHER ONLINE LOB(ACTIVITY_LIST) STORE AS SECUREFILE (COMPRESS HIGH);
ALTER TABLE FRAUD_DB.CLAIM_HISTORY MOVE PARTITION P_DATE_OTHER ONLINE LOB(DELIVERY_RESPONSE) STORE AS SECUREFILE (COMPRESS HIGH);
ALTER TABLE FRAUD_DB.FRAUD_RULES MOVE PARTITION P_DATE_OTHER ONLINE LOB(RULE_BODY) STORE AS SECUREFILE (COMPRESS HIGH);
ALTER TABLE FRAUD_DB.FRAUD_RULES MOVE PARTITION P_DATE_OTHER ONLINE LOB(CONDITIONS) STORE AS SECUREFILE (COMPRESS HIGH);
ALTER TABLE FRAUD_DB.FRAUD_RULES_HIST MOVE PARTITION P_DATE_OTHER ONLINE LOB(RULE_JSON) STORE AS SECUREFILE (COMPRESS HIGH);
ALTER TABLE FRAUD_DB.FRAUD_RULE_FLOW MOVE PARTITION P_DATE_OTHER ONLINE LOB(COMMENT_COL) STORE AS SECUREFILE (COMPRESS HIGH);
ALTER TABLE FRAUD_DB.QUEUE_LOG MOVE PARTITION P_DATE_OTHER ONLINE LOB(DETAILS) STORE AS SECUREFILE (COMPRESS HIGH);
ALTER TABLE FRAUD_DB.TRANSACTION_QUEUE MOVE PARTITION P_DATE_OTHER ONLINE LOB(REQUEST_BODY) STORE AS SECUREFILE (COMPRESS HIGH);
ALTER TABLE FRAUD_DB.TRANSACTION_QUEUE MOVE PARTITION P_DATE_OTHER ONLINE LOB(RESPONSE_BODY) STORE AS SECUREFILE (COMPRESS HIGH);


CREATE TABLE FRAUD_DB.PART_MASTER
(
  TABLE_NAME        VARCHAR2(50 BYTE),
  DAYS_INTO_FUTURE  NUMBER,
  MAX_HV            DATE
)
TABLESPACE FRAUD_TS
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


DECLARE
sql_stmt    VARCHAR2(500);
begin
FOR i IN (
select  table_name from dba_tables where  table_name in (select distinct(table_name) from dba_tab_partitions where 
table_owner = 'FRAUD_DB') and owner = 'FRAUD_DB' )
LOOP
insert into FRAUD_DB.part_master values (i.table_name,7,'');
commit;
END LOOP;
END;


DECLARE
sql_stmt    VARCHAR2(200);
max_date    date;
BEGIN
FOR i IN (
select  pm.table_name,pm.days_into_future from FRAUD_DB.part_master pm
)
LOOP
update FRAUD_DB.part_master set MAX_HV = (SELECT max(to_date(SUBSTR(partition_name, -8),'YYYYMMDD')) FROM  dba_tab_partitions where 
table_owner ='FRAUD_DB' and table_name = i.table_name and partition_name
not in ('FIRST_PART', 'P_DATE_OTHER') and partition_name not like 'SYS%') where  table_name =i.table_name  ;
--sql_stmt :='alter table TPO_LOGS."'||i.table_name||'" split partition P_DATE_OTHER at (to_date('||''''||to_char(sysdate+i.days_into_future,'yyyy-mm-dd')||''''||','||''''||'yyyy-mm-dd'||''''||')) into (partition P_DATE_TO_'||to_char(sysdate+i.days_into_future,'yyyymmdd')||', partition P_DATE_OTHER)';
commit;
END LOOP;
END;

CREATE INDEX FRAUD_DB.first_act_time_idx ON FRAUD_DB.CLAIM_HISTORY
(FIRST_ACT_TIME)
  TABLESPACE FRAUD_TS
  STORAGE    (
              BUFFER_POOL      DEFAULT
              FLASH_CACHE      DEFAULT
              CELL_FLASH_CACHE DEFAULT
             )
LOGGING
LOCAL ;

CREATE INDEX FRAUD_DB.last_act_time_idx ON FRAUD_DB.CLAIM_HISTORY
(LAST_ACT_TIME)
  TABLESPACE FRAUD_TS
  STORAGE    (
              BUFFER_POOL      DEFAULT
              FLASH_CACHE      DEFAULT
              CELL_FLASH_CACHE DEFAULT
             )
LOGGING
LOCAL;

CREATE INDEX FRAUD_DB.processing_status_idx ON FRAUD_DB.CLAIM_HISTORY
(PROCESSING_STATUS)
  TABLESPACE FRAUD_TS
  STORAGE    (
              BUFFER_POOL      DEFAULT
              FLASH_CACHE      DEFAULT
              CELL_FLASH_CACHE DEFAULT
             )
LOGGING
LOCAL ;

create index FRAUD_DB.IX_ACT_DETAILS_CLAIM_ID on FRAUD_DB.ACT_DETAILS(CLAIM_ID) local;
 
create index FRAUD_DB.IX_DIAG_DETAILS_CLAIM_ID on FRAUD_DB.DIAG_DETAILS("CLAIM_ID") ;
 
 
create index FRAUD_DB.IX_PATIENT_MEMBER_ID on FRAUD_DB.PATIENT("MEMBER_ID") local;
create index FRAUD_DB.IX_PATIENT_CLAIM_HISTORY on FRAUD_DB.CLAIM_HISTORY("PATIENT_HISTORY_ID")local;
 


CREATE INDEX FRAUD_DB.PAYER_RESPONSE_STAT_IDX ON FRAUD_DB.CLAIM_HISTORY
(PAYER_RESPONSE_STATUS)
  TABLESPACE FRAUD_TS
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
              FLASH_CACHE      DEFAULT
              CELL_FLASH_CACHE DEFAULT
             )
LOGGING
LOCAL ;

CREATE INDEX FRAUD_DB.patient_his_id_idx ON FRAUD_DB.ACT_DETAILS
(PATIENT_HISTORY_ID)
  TABLESPACE FRAUD_TS
  STORAGE    (
              BUFFER_POOL      DEFAULT
              FLASH_CACHE      DEFAULT
              CELL_FLASH_CACHE DEFAULT
             )
LOGGINg
local;


